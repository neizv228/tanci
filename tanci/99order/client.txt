 WindowStartupLocation="CenterScreen"
        MaxHeight="760" MaxWidth="1160"
        MinHeight="740" MinWidth="1140"
        Title="Магазин окон" Height="750" Width="1150" Icon="/Resources/icon.ico" FontFamily="Arial">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90*"/>
            <RowDefinition Height="360*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="usersFaio" Width="500" Height="25" Margin="400,10,0,0" VerticalAlignment="Top"/>
        <Grid Name="GridUp" Panel.ZIndex="-2" Background="#FF8CD3D6"/>
        <Image Name="Img" Source="/Resources/logo.png" HorizontalAlignment="Left"/>
        <Label Content="Магазин окон" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" FontFamily="Arial" Foreground="White"/>
        <Button Name="Exit" Content="Выйти" FontSize="15" Height="30" Width="100" FontFamily="Arial" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White" Background="#FF3AA49F" Click="Exit_Click"/>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ListView x:Name="MaterialsListView" ItemsSource="{Binding MaterialsList}" Grid.Row="1">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="1" BorderBrush="Black" Background="{Binding BackgroundColor}">
                            <Grid Margin="10" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Name="Img" Source="{Binding Path=TovarPhoto}" Width="100" Height="100"/>
                                <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding TovarName}" FontFamily="Arial" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Опиcание: " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock Text="{Binding TovarDescription}" FontFamily="Arial" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Производитель: " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock Text="{Binding Manufacturers.ManufacturerName}" FontFamily="Arial" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Количество на складе " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock Text="{Binding TovarQuantityInStock}" FontFamily="Arial" FontSize="14"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Цена: " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock Text="{Binding TovarCost, StringFormat={}{0:N2} руб.}" FontFamily="Arial" Foreground="{Binding CostColor}" FontSize="14" TextDecorations="{Binding CostDeco}"/>
                                        <TextBlock Text="   " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock x:Name="CostDesc" Text="{Binding TovarCostDisc, StringFormat={}{0:N2} руб.}" FontFamily="Arial" FontSize="14" Visibility="{Binding CostHid}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Скидка: " FontFamily="Arial" FontSize="14"/>
                                        <TextBlock Text="{Binding TovarDiscountAmount, StringFormat={}{0} %}" FontFamily="Arial" FontSize="14"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</Window>






 public partial class ClientOkno : Window, INotifyPropertyChanged
    {
        public string UserFIOass;
        public event PropertyChangedEventHandler PropertyChanged;
        private IEnumerable<Tovar> _MaterialsList;
        private int SortType = 0;
        private int ManufacturerFilterID = 0;
        public List<Manufacturers> ManufacturerList { get; set; }
        public string[] SortList { get; set; } =
        {
            "Без сортировки",
            "Стоимость по возрастанию",
            "Стоимость по убыванию",
        };

        private void Invalidate(string ComponentName = "MaterialsList")
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs("MaterialsList"));
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(ComponentName));
        }

        private string SearchFilter = "";

        public IEnumerable<Tovar> MaterialsList
        {
            get
            {
                var Result = _MaterialsList;


                switch (SortType)
                {
                    case 0:
                        Result = KNOEntities.GetContext().Tovar.ToList();
                        break;
                    case 1:
                        Result = KNOEntities.GetContext().Tovar.OrderBy(p => p.TovarCost);
                        break;
                    case 2:
                        Result = KNOEntities.GetContext().Tovar.OrderByDescending(p => p.TovarCost);
                        break;
                }
                if (SearchFilter != "")
                    Result = Result.Where(p =>
                    p.TovarName.IndexOf(SearchFilter, StringComparison.OrdinalIgnoreCase) >= 0 ||
                    p.TovarDescription.IndexOf(SearchFilter, StringComparison.OrdinalIgnoreCase) >= 0);



                return Result.Take(100);
            }
            set
            {
                _MaterialsList = value;
                Invalidate();
            }
        }

        public ClientOkno(string Faio)
        {
            InitializeComponent();
            DataContext = this;
            MaterialsList = KNOEntities.GetContext().Tovar.ToList();
            ManufacturerList = KNOEntities.GetContext().Manufacturers.ToList();
            ManufacturerList.Clear();
            ManufacturerList.Insert(0, new Manufacturers { ManufacturerName = "Все диапазоны" });
            ManufacturerList.Insert(1, new Manufacturers { ManufacturerName = "Скидки от 0% до 12,99%" });
            ManufacturerList.Insert(2, new Manufacturers { ManufacturerName = "Скидки от 13% до 16,99%" });
            ManufacturerList.Insert(3, new Manufacturers { ManufacturerName = "Больше 17%" });
            UserFIOass = Faio;
            usersFaio.Text = UserFIOass;
        }


        private void Update_Click(object sender, RoutedEventArgs e)
        {
            MaterialsListView.ItemsSource = KNOEntities.GetContext().Tovar.ToList();
            Invalidate();
        }

        private void Exit_Click(object sender, RoutedEventArgs e)
        {
            MainWindow m = new MainWindow();
            m.Show();
            this.Close();
        }
    }
}
